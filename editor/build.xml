<?xml version="1.0" encoding="utf-8"?>
<!-- $Id: build.xml 45 2011-04-20 00:48:55Z taruss2000@gmail.com $
  Build script for constructing the KEfED editor applications and
  packaging it up as a blazeds war file.

  Contains the following targets:
    compile     - compiles the entire set of applications
    compile-app - compile a single app specified by APP parameter (BioScholar)
    war         - generate blazeds.war file with all applications
    dist        - compile files and generate a war DEFAULT
    doc         - generate ASDOC files
    demo        - generate a distribution for a demo file, with flag change
    clean       - remove all compiled files, war file and generated documentation

  And uses the following main properties, which can be set
  from the command line with "ant -Dproperty=value ... command"
    FLEX_HOME    - MUST be set.  Points to the Flex SDK installation.
                   Will try to read from the host FLEX_HOME environment variable.
    APP_LIST     - List of Kefed editor applications to build.  By default
                   BioScholar,KefedModelEditor,KefedModelNavigator,NeuralConnectivity
    DEMO_APP     - Application to build as a demo, after setting a Boolean variable
                   value named "demo" to true.
    WARN         - Flag to control printing of compiler warnings.  Default: false.
  -->
<project name="KEfED App Builder" basedir="." default="dist">
    <taskdef resource="net/sf/antcontrib/antlib.xml"
	     classpath="${basedir}/ant/lib/ant-contrib.jar"/>
    <taskdef resource="flexTasks.tasks"
             classpath="${basedir}/ant/lib/flexTasks.jar"/>
    <property environment="host"/>
    <property name="CREATOR" value="University of Southern California"/>
    <property name="flash.version.major" value="9" /> 
    <property name="flash.version.minor" value="0" /> 
    <property name="flash.version.revision" value="124" /> 
    <property name="SRC_DIR" location="src"/>
    <property name="LIB_DIR" location="libs"/>
    <property name="BUILD_DIR" location="build"/>
    <property name="WAR_DIR" location="dist"/>
    <property name="DOC_DIR" location="doc"/>
    <property name="BLAZEDS_TEMPLATE" location="blazeds-template"/>
    <property name="FLEX_HOME" value="${host.FLEX_HOME}"/>
    <property name="APP_WIDTH" value="100%" /> 
    <property name="APP_HEIGHT" value="100%" /> 
    <property name="ASDOC_COMMAND" value="${host.FLEX_HOME}/bin/asdoc"/>
    <property name="DOC_TITLE" value="BioScholar KEfED Editor"/>
    <property name="DOC_FOOTER" value="USC ISI Biomedical Knowledge Engineering Group"/>
    <property name="APP" value="BioScholar"/>
    <property name="DEMO_APP" value="NeuralConnectivity"/>
    <property name="CONTEXT_ROOT" value="blazeds"/>
    <property name="CONTEXT" value="bioscholar"/>
 <!-- Replace with smaller build set    <property name="APP_LIST" value="BioScholar,KefedModelEditor,KefedModelNavigator,NeuralConnectivity"/>
 -->
    <property name="APP_LIST" value="BioScholar,NeuralConnectivity"/>
    <property name="WARN" value="false"/>

    <fail unless="host.FLEX_HOME">FLEX_HOME environment variable needs to be set to the Flex SDK directory.</fail>

    <path id="kefed.as.lib">
      <fileset dir="libs">
        <include name="*.swc"/>
      </fileset>
    </path>

    <!-- Figure out how to generate this from the APP_LIST -->
    <path id="kefed.app.path">
      <fileset dir="${SRC_DIR}">
	<include name="*.mxml"/>
      </fileset>
    </path>

    <target name="init">
      <tstamp/>
      <!--  <echoproperties/> -->
      <mkdir dir="${BUILD_DIR}/${CONTEXT_ROOT}/${CONTEXT}"/>
      <if>
	<not> <resourceexists>
	  <file file="${SRC_DIR}/configuration.xml"/>
	</resourceexists>
	</not>
	<then>
	  <copy file="${SRC_DIR}/configuration-sample.xml" tofile="${SRC_DIR}/configuration.xml"/>
	</then>
      </if>
    </target>

    <target name="compile" depends="init">
      <for param="app" list="${APP_LIST}" keepgoing="true">
	<sequential>
	  <antcall target="compile-app">
	    <param name="APP" value="@{app}"/>
	  </antcall>
	</sequential>
      </for>
    </target>

    <target name="demo">
      <antcall target="clean"/>
      <echo message="Creating ${DEMO_APP}Demo.mxml"/>
      <copy file="${SRC_DIR}/${DEMO_APP}.mxml" tofile="${SRC_DIR}/${DEMO_APP}Demo.mxml">
	<filterchain>
	  <tokenfilter>
	    <replacestring from="demo:Boolean = false" to="demo:Boolean = true"/>
	  </tokenfilter>
	</filterchain>
      </copy>
      <antcall target="compile-app">
	<param name="APP" value="${DEMO_APP}Demo"/>
      </antcall>
      <move file="${BUILD_DIR}/${CONTEXT_ROOT}/${CONTEXT}/${DEMO_APP}Demo.html"
	    tofile="${BUILD_DIR}/${CONTEXT_ROOT}/${CONTEXT}/${DEMO_APP}.html"/>
      <antcall target="war"/>
      <delete file="${SRC_DIR}/${DEMO_APP}Demo.mxml"/>
    </target>

    <target name="compile-app" depends="init">
      <echo message="Compiling ${APP}"/>
      <mxmlc file="${SRC_DIR}/${APP}.mxml" 
	     keep-generated-actionscript="false"
	     incremental="true"
	     output="${BUILD_DIR}/${CONTEXT_ROOT}/${CONTEXT}/${APP}.swf"
             services="${basedir}/blazeds-template/WEB-INF/flex/services-config.xml"
	     context-root="/${CONTEXT_ROOT}"
	     warnings="${WARN}"
             locale="en_US">
	<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
	<source-path path-element="${FLEX_HOME}/frameworks"/>
	<compiler.library-path dir="${FLEX_HOME}/frameworks" append="true">
                <include name="libs" />
                <include name="../bundles/{locale}" />
        </compiler.library-path>
	<compiler.library-path dir="${LIB_DIR}" append="true">
                <include name="*.swc" />
        </compiler.library-path>
      </mxmlc>
      <echo message="Making wrapper for ${APP}"/>
      <html-wrapper title="${APP} Application" file="${APP}.html" 
            application="${APP}" swf="${APP}" 
	    width="${APP_WIDTH}" height="${APP_HEIGHT}"
	    bgcolor="#869ca7"
	    history="true"
	    version-major="${flash.version.major}" 
            version-minor="${flash.version.minor}"
	    version-revision="${flash.version.revision}" 
            output="${BUILD_DIR}/${CONTEXT_ROOT}/${CONTEXT}" />
    </target>

    <target name="dist" depends="compile">
      <antcall target="war"/>
    </target>

    <target name="war">
      <mkdir dir="${WAR_DIR}"/>
      <copy todir="${BUILD_DIR}/${CONTEXT_ROOT}">
	<fileset dir="${BLAZEDS_TEMPLATE}"/>
      </copy>
      <delete>
	<fileset dir="${BUILD_DIR}" includes="**/*.swf.cache"/>
      </delete>
      <war destfile="${WAR_DIR}/${CONTEXT_ROOT}.war" basedir="${BUILD_DIR}/${CONTEXT_ROOT}">
      </war>
    </target>

    <target name="doc" depends="init"
	    description="Generate the ASDOC for the Flex code.">
      <mkdir dir="${DOC_DIR}/asdoc"/>
     <!-- There currently isn't an ant task for this, so we use the command line. -->
      <exec executable="${ASDOC_COMMAND}" failonerror="true">
	<arg line='-doc-sources+=${SRC_DIR}/edu' />
	<arg prefix='-doc-sources+=' pathref='kefed.app.path' />
	<arg line='-strict=true' />
	<arg line='-compiler.show-binding-warnings=false' />
 	<arg line='-compiler.show-actionscript-warnings=false' />
	<arg line='-compiler.source-path ${SRC_DIR}' />
        <arg prefix='-compiler.library-path+=' pathref='kefed.as.lib' />
	<arg line='-main-title "${DOC_TITLE}"' />
	<arg line='-window-title "${DOC_TITLE}"' />
	<arg line='-footer "${DOC_FOOTER}"' />
	<arg line='-output ${DOC_DIR}/asdoc' />
      </exec>
    </target>

    <target name="clean"
	    description="clean up" >
      <!-- Delete the directory trees that get generated by this script. -->
      <delete dir="${BUILD_DIR}"/>
      <delete dir="${SRC_DIR}/generated"/>
      <delete dir="${WAR_DIR}"/>
      <delete dir="${DOC_DIR}"/>
    </target>
</project>
